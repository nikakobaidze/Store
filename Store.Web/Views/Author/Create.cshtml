@model Store.Web.ViewModels.AuthorViewModel

@{
    ViewBag.Title = "Create";
}

<div class="container mt-5">
    <h2 class="text-center">Create Author</h2>

    <div class="row">
        <div class="col-md-6 col-md-offset-3">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Author Details</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", id = "FirstName" } })
                            <span id="firstNameError" class="text-danger"></span> <!-- Error message placeholder -->
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", id = "LastName" } })
                            <span id="lastNameError" class="text-danger"></span> <!-- Error message placeholder -->
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-primary" id="submitButton" />
                        </div>
                    </div>
                </div>
            }
            <div class="text-center">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
</div>

<script>
    // Validate on form submission
    document.getElementById("submitButton").addEventListener("click", function (event) {
        var firstName = document.getElementById("FirstName").value;
        var lastName = document.getElementById("LastName").value;

        // Regular expressions for alphabetic characters only
        var namePattern = /^[a-zA-Z\s]+$/;

        var firstNameValid = namePattern.test(firstName);
        var lastNameValid = namePattern.test(lastName);

        // Reset error messages
        document.getElementById("firstNameError").textContent = "";
        document.getElementById("lastNameError").textContent = "";

        // Display error messages if validation fails
        if (!firstNameValid) {
            document.getElementById("firstNameError").textContent = "First Name cannot contain numbers or special characters.";
            event.preventDefault(); // Prevent form submission
        }

        if (!lastNameValid) {
            document.getElementById("lastNameError").textContent = "Last Name cannot contain numbers or special characters.";
            event.preventDefault(); // Prevent form submission
        }
    });
</script>
