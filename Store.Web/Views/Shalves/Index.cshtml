@model IEnumerable<Store.Web.ViewModels.ShalvesViewModel>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<input type="text" id="searchInput" onkeyup="search()" placeholder="Search for names...">

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Floor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Room)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Shelf)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Section)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Row)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Floor)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Room)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Shelf)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Section)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Row)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { onclick = "return confirmDelete();" })
        </td>
    </tr>
}

</table>
<script>
    function confirmDelete() {
        return confirm("Are you sure you want to delete this item?");
    }

    function search() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.querySelector(".table");
        tr = table.getElementsByTagName("tr");

        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0]; // Change this index to match the column you want to search
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>
